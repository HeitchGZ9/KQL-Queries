let timeRange = 30d;
SecurityIncident
| where TimeGenerated > ago(timeRange)
| summarize LatestTime = arg_max(TimeGenerated, *) by IncidentNumber
| mv-apply Labels on ( summarize Tags = make_set(tostring(parse_json(Labels).labelName)))
//| where not(Tags has_any ( "LabelOne","Labeltwo"))//if labels to resolved incidents are used
| where Severity != "Informational"//Exclude or not Informational
|extend Email=parse_json(Owner).email
//|where Email contains "@" //If incidents manually handled are requires
| summarize
    TotalIncidents = count(),
    NoTruePositives = countif(Classification in ("FalsePositive", "BenignPositive", "Undetermined"))
    by Title
| where NoTruePositives > 0
| extend FidelityRatio = 100 - round(todouble(NoTruePositives) / TotalIncidents * 100, 2)
| sort by TotalIncidents desc, FidelityRatio asc
| project Title, TotalIncidents, NoTruePositives, FidelityRatio
